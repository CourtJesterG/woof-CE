#!/bin/ash

info_exit() {
	$YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --title "$MAIN_TITLE" --image="$INFO_ICON" --button=gtk-ok:0 \
		--text "$1"
	exec "$EXE_DIR/extra_sfs_main"
}

error_exit() {
	$YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --title "$MAIN_TITLE" --image="$ERR_ICON" --button=gtk-ok:1 \
		--text "$1"
	exec "$EXE_DIR/extra_sfs_main"
}

EXE_DIR="$(dirname $(readlink -f ${0}))"
[ -f "$EXE_DIR/extra_sfs_common" ] && . "$EXE_DIR/extra_sfs_common"
[ -f "$CONF_FILE" ] && . "$CONF_FILE"

if [ "$(file -Lb /bin/busybox | grep '64-bit')" ]; then
	YAD_EXE='yad64'
else
	YAD_EXE='yad32'
fi

SFS_FN="$($YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --title "$MAIN_TITLE - Select sfs file to add" \
			--text "$CUR_MSG" \
			--file --width=600 --height=400 \
			--file-filter "sfs files | *.sfs" \
			--filename="${SFS_MP}${SFS_REL}")"
[ "$SFS_FN" ] || info_exit "No extra sfs file was selected."
[ "${SFS_FN##*.}" = "sfs" ] || error_exit "\"$SFS_FN\", is not a \".sfs\" file."

#check for being puppy system sfs file
SFS_BN=${SFS_FN##*/}
. /etc/rc.d/PUPSTATE
. /etc/DISTRO_SPECS
PUP_SFS=""
if [ "$SFS_BN" = "${PUPSFS##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${ZDRV##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${FDRV##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${ADRV##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${YDRV##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${DISTRO_PUPPYSFS##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${DISTRO_ZDRVSFS##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${DISTRO_FDRVSFS##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${DISTRO_ADRVSFS##*/}" ]; then
	PUP_SFS="yes"
elif [ "$SFS_BN" = "${DISTRO_YDRVSFS##*/}" ]; then
	PUP_SFS="yes"
elif [ "$(echo "$SFS_BN" | grep "^${DISTRO_FILE_PREFIX}save")" ]; then
	PUP_SFS="yes"
fi
[ "$PUP_SFS" = "yes" ] && error_exit "\"$SFS_BN\", is a puppy system sfs file."

XTRA_SFS="$(tmpbs2variable -q XTRA_SFS)"

[ "$(echo "$XTRA_SFS" | grep "$SFS_BN")" ] && info_exit "\"$SFS_BN\", is already in list."

CUR_PART="$(df --output=source "$SFS_FN" | tail -1)"; CUR_PART="${CUR_PART#/dev/}"
if [ "$CUR_PART" = "$SFS_PART" ]; then
	CUR_SPEC="${SFS_FN#${SFS_MP}}"; CUR_SPEC="${CUR_SPEC#${SFS_REL}/}"; CUR_SPEC=":${CUR_SPEC}"
else
	UUID="$(blkid "/dev/$CUR_PART")"; UUID=${UUID#* UUID=\"}; UUID=${UUID%%\"*}
	[ "$UUID" ] && CUR_PART=$UUID
	CUR_MP="$(stat -Lc %m "$SFS_FN")"
	CUR_SPEC="${SFS_FN#${CUR_MP}}"; CUR_SPEC="${CUR_SPEC#${SFS_REL}/}"; CUR_SPEC="${CUR_PART}:${CUR_SPEC}"
fi
if [ "$CUR_SPEC" ]; then
	if [ "$XTRA_SFS" ]; then
		XTRA_SFS="${XTRA_SFS},${CUR_SPEC}"
	else
		XTRA_SFS="${CUR_SPEC}"
	fi
	variable2tmpbs -q XTRA_SFS "$XTRA_SFS"
fi

exec "$EXE_DIR/extra_sfs_main"

exit
