#!/bin/ash

error_exit() {
	if [ "$1" ]; then
		$YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --height=80 --title "Saveconfig" --buttons-layout=center \
			--text "$1" \
			--button=gtk-ok:0
	fi
	[ -f "$TMP_LIST" ] && rm "$TMP_LIST"
	[ "$PART_MOUNT" ] && umount "$PART_MOUNT"
	[ "$LUKS_OPEN" ] && cryptsetup close "$LUKS_OPEN"
	exit 1
}

EXE_DIR="$(dirname $(readlink -f ${0}))"

if [ "$(file -Lb /bin/busybox | grep '64-bit')" ]; then
	YAD_EXE='yad64'
else
	YAD_EXE='yad32'
fi

ICON_FILE='/usr/share/pixmaps/puppy/floppy.svg'
OPEN_ICON="$EXE_DIR/icons/open.png"
NEW_ICON="$EXE_DIR/icons/new.png"

PART_MOUNT=''
LOOP_MOUNT=''
LUKS_OPEN=''

TMP_LIST='/tmp/save_config_tmp_list.txt'
[ -f "$TMP_LIST" ] && rm "$TMP_LIST"

[ -d /tmp/disk/linux ] || get_part_info

PARTS_DIR="/tmp/disk/linux"
PARTS_LIST="$(ls -1 $PARTS_DIR/)"
if [ "$PARTS_LIST" ];then
	for ONE_PART in $PARTS_LIST; do
		read ONE_LINE < "$PARTS_DIR/$ONE_PART"
		ONE_TYPE="${ONE_LINE#*:}"
		ONE_ID="${ONE_LINE%:*}"
		ONE_LABEL="${ONE_ID#*,}"
		ONE_ID="${ONE_ID%,*}"
		echo "$ONE_PART" >> "$TMP_LIST"
		echo "$ONE_TYPE" >> "$TMP_LIST"
		echo "$ONE_LABEL" >> "$TMP_LIST"
		echo "$ONE_ID" >> "$TMP_LIST"
	done
	PART_SPEC="$($YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --width=270 --height=200 --title "Saveconfig" --buttons-layout=center \
		--text "Select a partition:" \
		--list --column=Part --column=Type --column=Label --column=UUID:HD < $TMP_LIST \
		--button=gtk-cancel:1 --button=gtk-ok:0)"
	[ $? -eq 1 ] &&  error_exit
	rm "$TMP_LIST"
fi
[ "$PART_SPEC" ] || error_exit "No partition selected."
PART_SPEC="${PART_SPEC%|}"
PART_NAME="${PART_SPEC%%|*}"
PART_FS="${PART_SPEC#*|}"; PART_FS="${PART_FS%%|*}"

if [ "$PART_FS" = "crypto_LUKS" ]; then
	if [ ! -e "/dev/mapper/$PART_NAME" ]; then
		[ "$(which cryptsetup)" ] || error_exit "\"cryptsetup\" utility not found."
		MYPASS="$($YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --title="Saveconfig - password" --buttons-layout=center \
		--text="Enter the password for ${PART_NAME}:" \
		--entry --hide-text)"
		[ "$MYPASS" ] || error_exit
		/usr/lib/gtkdialog/box_splash -text "Opening Luks partition /dev/$PART_NAME as /dev/mapper/$PART_NAME" &
		XPID=$!
		echo -n "$MYPASS" | cryptsetup open "/dev/$PART_NAME" "$PART_NAME" -
		STATUS=$?
		kill $XPID
		[ $STATUS -eq 0 ] || error_exit "Luks open of \"$PART_NAME\" failed."
		LUKS_OPEN="$PART_NAME"
	fi
	PART_FS="$(blkid /dev/mapper/$PART_NAME)"
	PART_FS="${PART_FS#* TYPE=\"}"; PART_FS="${PART_FS%\"}"
	PART_NAME="mapper/$PART_NAME"
fi

PART_MP="$(grep -m1 "^/dev/$PART_NAME" /proc/mounts)"
if [ "$PART_MP" ]; then
	PART_MP="${PART_MP#* }"; PART_MP="${PART_MP%% *}"
else
	if [ "$PART_FS" ]; then
		PART_MP="/mnt/$(echo $PART_NAME | tr '/' '+')"
		[ -d "$PART_MP" ] || mkdir -p $PART_MP
		mount -t $PART_FS -o noatime /dev/$PART_NAME $PART_MP
		if [ $? -eq 0 ]; then
			PART_MOUNT="$PART_MP"
		else
			PART_MP=''
		fi
	fi
fi
[ "$PART_MP" ] || error_exit "\"$PART_NAME\" could not be mounted."

PART_ID=''
#try to use LABEL to specify partition in PART_ID
LABEL="${PART_SPEC#*|*|}"; LABEL="${LABEL%|*}"
if [ "$LABEL" ]; then
	PART_ID="$LABEL"
else
	#else use UUID
	UUID="${PART_SPEC##*|}"
	[ "$UUID" ] && PART_ID="$UUID"
fi
[ "$PART_ID" ] || PART_ID="$PART_NAME"

BS_SAVE_PART="${PART_ID}" #for BOOT_SPECS

. /etc/DISTRO_SPECS

PART_DIR="$($YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --title "Saveconfig - Select a directory to contain \"${DISTRO_FILE_PREFIX}save\"." \
	--file --directory --width=600 --height=400 \
	--text " \"$PART_NAME\" is mounted on \"$PART_MP\"" \
	--filename="$PART_MP/")"
[ "$PART_DIR" ] || error_exit "No directory selected"

BS_SAVE_DIR="${PART_DIR#${PART_MP}}"
[ "$BS_SAVE_DIR" ] || BS_SAVE_DIR='/' #for BOOT_SPECS

$YAD_EXE --window-icon="$ICON_FILE" --center --borders=6 --title="Saveconfig - confirm" --buttons-layout=center \
	--text="Use directory <span foreground='blue'><big>$BS_SAVE_DIR</big></span> inside <span foreground='blue'><big>$PART_NAME</big></span>
to contain savefolder \"${DISTRO_FILE_PREFIX}save\"?" \
	--button=gtk-no:1 --button=gtk-yes:0
[ $? -eq 0 ] || error_exit

#"$EXE_DIR/saveconfig_rosave"

[ -d "$PART_DIR/${DISTRO_FILE_PREFIX}save" ] || mkdir -p "$PART_DIR/${DISTRO_FILE_PREFIX}save"
[ -d "$PART_DIR/${DISTRO_FILE_PREFIX}work" ] || mkdir -p "$PART_DIR/${DISTRO_FILE_PREFIX}work"

variable2tmpbs P_SAVE_PART "$BS_SAVE_PART"
variable2tmpbs P_SAVE_DIR "$BS_SAVE_DIR"
variable2tmpbs PMODE "12"

[ "$PART_MOUNT" ] && umount "$PART_MOUNT"
[ "$LUKS_OPEN" ] && cryptsetup close "$LUKS_OPEN"

exit
